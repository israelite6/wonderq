var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AcknowledgeMessageDto.html",[0,0.216,1,1.915]],["body/classes/AcknowledgeMessageDto.html",[0,0.321,1,2.846,2,1.305,3,0.35,4,0.297,5,0.297,6,3.23,7,2.179,8,0.246,9,0.957,10,0.959,11,0.432,12,0.035,13,0.911,14,1.435,15,2.473,16,4.524,17,0.811,18,2.867,19,1.168,20,3.23,21,3.23,22,2.179,23,2.066,24,1.305,25,0.35,26,1.582,27,0.027,28,0.027]],["title/classes/AcknowledgeMessageResponseDto.html",[0,0.216,29,1.915]],["body/classes/AcknowledgeMessageResponseDto.html",[0,0.226,2,1.201,3,0.322,4,0.273,5,0.273,6,3.451,8,0.226,9,0.906,10,0.92,11,0.476,12,0.035,13,0.881,14,1.774,17,1.002,19,0.823,23,2.207,24,1.201,25,0.322,26,1.955,27,0.025,28,0.025,29,2.693,30,0.92,31,2.006,32,3.451,33,2.141,34,2.693,35,3.057,36,2.638,37,2.693,38,2.276]],["title/interfaces/AcknowledgeMessageResponseInterface.html",[39,0.519,40,1.709]],["body/interfaces/AcknowledgeMessageResponseInterface.html",[3,0.386,4,0.327,5,0.327,8,0.271,9,1.018,10,1.054,11,0.412,12,0.034,13,0.899,25,0.386,27,0.028,28,0.028,30,0.727,32,3.953,33,2.185,39,0.651,40,2.702,41,1.438,42,3.158,43,2.142]],["title/controllers/AppController.html",[44,1.915,45,1.915]],["body/controllers/AppController.html",[0,0.107,1,2.244,3,0.153,4,0.13,5,0.13,8,0.107,11,0.429,12,0.036,14,1.478,17,0.835,19,1.361,24,0.57,25,0.153,27,0.014,28,0.014,29,1.95,30,0.843,32,1.753,35,2.547,40,1.74,44,1.545,45,1.545,46,1.252,47,1.252,48,1.121,49,2.565,50,2.952,51,2.9,52,3.1,53,1.513,54,1.513,55,4.611,56,3.815,57,3.567,58,1.513,59,1.415,60,1.415,61,1.415,62,4.201,63,1.629,64,1.513,65,2.244,66,1.513,67,1.95,68,3.567,69,1.513,70,1.74,71,1.513,72,1.95,73,1.95,74,1.513,75,1.284,76,1.513,77,2.244,78,1.513,79,2.456,80,2.456,81,1.95,82,1.513,83,1.74,84,3.1,85,1.513,86,1.513,87,0.764,88,1.565,89,1.252,90,2.456,91,3.1,92,1.08,93,1.513,94,3.922,95,1.513,96,1.08,97,3.1,98,2.456,99,1.252,100,2.565,101,2.456,102,1.252,103,1.252,104,0.952,105,1.08,106,1.513,107,1.513,108,3.567,109,2.003,110,1.513,111,1.513,112,1.513,113,1.513,114,1.513,115,1.513,116,1.513,117,1.513]],["title/modules/AppModule.html",[118,2.174,119,1.915]],["body/modules/AppModule.html",[0,0.208,3,0.296,4,0.251,5,0.251,12,0.036,19,1.396,25,0.296,27,0.024,28,0.024,45,2.909,46,3.342,87,1.477,88,2.731,89,2.421,118,2.883,119,3.554,120,2.089,121,2.54,122,2.421,123,2.421,124,2.47,125,3.342,126,2.421,127,2.421,128,2.926,129,4.038,130,2.926,131,2.089,132,4.038,133,2.421,134,2.54,135,2.926,136,2.926,137,2.926,138,2.926,139,2.926]],["title/injectables/AppService.html",[88,1.537,140,1.537]],["body/injectables/AppService.html",[0,0.161,3,0.229,4,0.194,5,0.194,8,0.161,10,0.64,11,0.38,12,0.036,13,0.808,17,1.108,19,1.281,25,0.229,27,0.02,28,0.02,30,0.844,40,1.886,48,1.534,49,2.78,50,2.78,51,1.424,59,2.024,60,2.024,61,2.024,63,2.024,70,2.249,75,1.66,83,2.249,87,1.143,88,1.696,99,1.873,100,3.315,102,1.873,103,1.873,104,1.424,105,1.616,109,1.886,124,2.266,131,1.616,140,1.696,141,1.616,142,1.873,143,3.359,144,1.616,145,1.873,146,2.263,147,2.263,148,2.263,149,2.263,150,3.359,151,2.52,152,2.263,153,1.873,154,3.359,155,2.263,156,2.263,157,2.78,158,1.27,159,2.263,160,2.263,161,2.263,162,1.616]],["title/classes/ConsumeMessageDto.html",[0,0.216,65,1.915]],["body/classes/ConsumeMessageDto.html",[0,0.321,2,1.305,3,0.35,4,0.297,5,0.297,7,2.179,8,0.246,9,0.957,11,0.432,12,0.035,14,1.435,15,2.473,17,0.811,18,2.867,19,1.168,20,3.23,21,3.23,22,2.179,23,2.066,24,1.305,25,0.35,26,1.582,27,0.027,28,0.027,65,2.846,151,3.359,153,4.168,163,3.23,164,3.744]],["title/classes/ConsumeMessageResponseDto.html",[0,0.216,67,1.915]],["body/classes/ConsumeMessageResponseDto.html",[0,0.201,2,1.068,3,0.286,4,0.243,5,0.243,8,0.201,9,0.836,10,0.866,11,0.488,12,0.035,13,1.003,14,1.884,17,1.064,19,0.732,23,2.246,24,1.068,25,0.286,26,2.076,27,0.023,28,0.023,30,1.047,31,1.783,34,2.861,36,2.346,37,2.485,38,2.024,67,2.485,163,3.512,165,2.076,166,3.951,167,3.951,168,3.951,169,2.346]],["title/interfaces/ConsumeMessageResponseInterface.html",[39,0.519,70,1.709]],["body/interfaces/ConsumeMessageResponseInterface.html",[3,0.366,4,0.31,5,0.31,8,0.257,9,0.985,10,1.034,11,0.441,12,0.034,13,1.021,25,0.366,27,0.027,28,0.027,30,1.07,39,0.618,41,1.365,43,2.033,70,2.613,165,2.48,170,2.997]],["title/interfaces/DbInterface.html",[39,0.519,171,1.709]],["body/interfaces/DbInterface.html",[3,0.372,4,0.316,5,0.316,8,0.262,10,0.701,11,0.316,12,0.035,13,0.932,17,0.862,25,0.476,27,0.028,28,0.028,30,0.701,39,0.803,41,1.388,48,2.149,59,1.682,60,1.682,61,1.682,63,1.682,171,2.642,172,2.63,173,3.895,174,3.36,175,3.684,176,3.263]],["title/injectables/DbService.html",[124,1.39,140,1.537]],["body/injectables/DbService.html",[0,0.106,3,0.151,4,0.128,5,0.128,8,0.106,9,0.514,10,0.585,11,0.393,12,0.037,13,0.868,17,1.168,19,1.005,25,0.151,27,0.014,28,0.014,30,0.284,48,1.109,59,1.906,60,1.906,61,1.906,63,2.165,75,1.272,87,0.753,104,0.939,109,2.47,124,1.109,140,1.226,141,1.065,157,3.222,158,3.299,162,1.065,171,1.363,173,2.009,174,1.733,177,1.235,178,3.07,179,3.07,180,2.428,181,2.428,182,3.538,183,2.428,184,2.428,185,2.428,186,3.07,187,1.492,188,2.428,189,1.492,190,2.226,191,2.428,192,1.492,193,1.492,194,3.07,195,2.428,196,1.492,197,1.492,198,2.428,199,1.492,200,2.428,201,1.492,202,1.492,203,1.492,204,1.733,205,1.733,206,1.492,207,1.492,208,1.492,209,1.733,210,1.492,211,1.065,212,1.733,213,1.492,214,2.428,215,1.492,216,3.07,217,1.492,218,1.492,219,1.492,220,1.492,221,1.492,222,1.492,223,1.492,224,1.492,225,1.492,226,1.492,227,1.492,228,1.492,229,1.492,230,1.235,231,2.428,232,1.235,233,1.492]],["title/classes/Entity.html",[0,0.216,158,1.709]],["body/classes/Entity.html",[0,0.127,2,0.672,3,0.18,4,0.153,5,0.153,8,0.127,9,0.592,10,0.746,11,0.365,12,0.036,13,0.91,17,1.266,19,0.46,25,0.18,27,0.016,28,0.016,30,0.86,33,1.872,48,1.279,59,1.279,60,1.279,61,1.279,63,2.157,75,1.433,104,1.122,109,2.536,144,1.273,151,2.464,158,1.572,165,1.789,190,1.762,204,1.273,205,1.273,211,1.999,212,1.273,230,2.861,234,1.476,235,1.941,236,2.972,237,3.457,238,3.917,239,2.797,240,3.917,241,3.917,242,3.917,243,2.317,244,2.797,245,2.8,246,2.8,247,1.783,248,2.317,249,1.783,250,1.783,251,1.783,252,1.783,253,1.783,254,1.783,255,1.783,256,1.783,257,1.999,258,1.783,259,1.783,260,3.457,261,3.457,262,2.8,263,1.783,264,1.783,265,3.457,266,3.457,267,2.8]],["title/interfaces/EntityInterface.html",[39,0.519,235,1.709]],["body/interfaces/EntityInterface.html",[3,0.324,4,0.275,5,0.275,8,0.227,10,0.61,11,0.275,12,0.035,13,0.826,17,1.134,25,0.434,27,0.025,28,0.025,30,0.61,33,2.303,39,0.733,41,1.207,48,1.961,59,1.463,60,1.463,61,1.463,63,2.213,75,2.008,165,1.463,190,2.702,235,2.411,236,2.702,239,3.697,243,3.555,244,3.697,257,3.067,268,2.287,269,3.204,270,3.204,271,3.204]],["title/interfaces/EntityToJsonInterface.html",[39,0.519,75,1.262]],["body/interfaces/EntityToJsonInterface.html",[3,0.33,4,0.28,5,0.28,8,0.232,9,0.921,10,0.994,11,0.447,12,0.035,13,1.001,25,0.44,27,0.026,28,0.026,30,0.994,33,2.253,39,0.743,41,1.232,75,2.029,165,2.384,190,2.057,235,1.835,236,3.284,239,2.334,244,2.334,257,2.334,268,2.334]],["title/interfaces/InsertMessageInterface.html",[39,0.519,176,1.915]],["body/interfaces/InsertMessageInterface.html",[3,0.393,4,0.333,5,0.333,8,0.276,9,1.03,10,1.061,11,0.333,12,0.035,13,0.95,25,0.492,27,0.029,28,0.029,39,0.83,41,1.464,171,2.181,172,2.774,174,2.774,176,3.344]],["title/classes/PublishMessageDto.html",[0,0.216,77,1.915]],["body/classes/PublishMessageDto.html",[0,0.316,2,1.271,3,0.341,4,0.289,5,0.289,7,2.122,8,0.239,9,0.94,11,0.426,12,0.036,13,0.901,14,1.398,15,2.408,17,0.789,19,1.148,20,3.173,21,3.173,22,2.122,23,2.03,24,1.271,25,0.341,26,1.54,27,0.026,28,0.026,30,0.947,77,2.796,272,3.173,273,2.791,274,3.373,275,2.791,276,3.373,277,3.373,278,2.791,279,3.373]],["title/classes/PublishMessageResponseDto.html",[0,0.216,81,1.915]],["body/classes/PublishMessageResponseDto.html",[0,0.256,2,1.357,3,0.364,4,0.309,5,0.309,8,0.256,9,0.981,10,0.977,11,0.44,12,0.035,13,0.924,14,1.492,17,0.843,19,0.93,23,2.118,24,1.357,25,0.364,26,1.644,27,0.027,28,0.027,34,2.265,37,2.918,81,2.918,92,3.312,272,3.312,280,2.98,281,3.601]],["title/interfaces/PublishMessageResponseInterface.html",[39,0.519,83,1.709]],["body/interfaces/PublishMessageResponseInterface.html",[3,0.407,4,0.346,5,0.346,8,0.286,9,1.054,10,1.075,11,0.346,12,0.034,13,0.922,25,0.407,27,0.029,28,0.029,30,0.768,39,0.688,41,1.519,43,2.264,83,2.796,282,3.337]],["title/classes/PublishedMessagesListResponse.html",[0,0.216,73,1.915]],["body/classes/PublishedMessagesListResponse.html",[0,0.179,2,0.95,3,0.255,4,0.216,5,0.216,8,0.179,9,0.769,10,0.812,11,0.493,12,0.035,13,0.982,14,1.934,17,1.092,19,0.651,23,2.259,24,0.95,25,0.255,26,2.131,27,0.021,28,0.021,30,0.812,31,1.586,33,1.934,34,2.936,37,2.287,38,1.8,72,3.113,73,2.287,96,3.533,165,1.947,169,2.087,248,3.009,273,2.087,275,2.087,283,4.095,284,4.264,285,2.522,286,3.636,287,2.522,288,2.522]],["title/interfaces/PublishedMessagesResponseListInterface.html",[39,0.519,289,2.174]],["body/interfaces/PublishedMessagesResponseListInterface.html",[3,0.346,4,0.294,5,0.294,8,0.243,9,0.95,10,1.013,11,0.456,12,0.034,13,1.01,25,0.346,27,0.026,28,0.026,30,1.013,33,2.076,39,0.584,41,1.291,43,1.924,51,2.156,72,2.156,165,2.428,236,3.345,289,3.207,290,2.836]],["title/guards/RequeueMessageGuard.html",[134,1.915,291,2.174]],["body/guards/RequeueMessageGuard.html",[0,0.221,3,0.314,4,0.267,5,0.267,8,0.221,11,0.361,12,0.035,17,0.985,19,1.087,25,0.314,27,0.025,28,0.025,33,1.745,35,2.221,48,1.923,59,1.923,60,1.923,61,1.923,63,1.42,87,1.571,105,2.221,109,1.746,124,2.516,131,2.221,134,2.649,140,2.126,144,2.221,145,2.574,211,2.221,292,3.111,293,3.951,294,2.574,295,5.116,296,3.111,297,4.211,298,5.116,299,3.111,300,3.111,301,3.111]],["title/coverage.html",[302,2.963]],["body/coverage.html",[0,0.369,1,1.356,5,0.185,6,2.313,7,2.449,11,0.185,12,0.035,27,0.019,28,0.019,29,1.356,30,0.883,31,2.449,39,0.887,40,1.21,42,1.784,43,2.429,44,1.356,45,1.356,47,1.784,51,1.356,65,1.356,67,1.356,70,1.21,72,2.038,73,1.356,75,0.893,77,1.356,81,1.356,83,1.21,88,1.089,92,1.539,96,1.539,124,0.984,134,1.356,140,1.636,142,1.784,158,1.21,162,4.26,163,2.313,170,1.784,171,1.21,172,2.313,176,1.356,177,1.784,209,1.539,212,1.539,234,1.784,235,1.21,268,2.313,272,2.313,280,1.784,282,1.784,283,1.784,289,1.539,290,1.784,291,1.539,293,1.784,294,1.784,302,1.539,303,2.156,304,2.156,305,2.156,306,4.328,307,2.156,308,1.784,309,2.156,310,3.24,311,5.056,312,2.156,313,3.892,314,3.892,315,2.156,316,1.784,317,2.156,318,1.784,319,2.156,320,2.156]],["title/dependencies.html",[121,2.303,321,2.545]],["body/dependencies.html",[0,0.338,12,0.036,22,2.358,24,1.413,27,0.028,28,0.028,87,1.893,121,2.358,133,3.102,322,5.229,323,3.749,324,4.759,325,3.749,326,3.749,327,3.749,328,3.749,329,3.749,330,3.749,331,3.749,332,3.749,333,3.749,334,3.749,335,3.749,336,3.749,337,3.749,338,3.749]],["title/miscellaneous/functions.html",[339,1.601,340,3.029]],["body/miscellaneous/functions.html",[8,0.321,12,0.031,27,0.031,28,0.031,316,3.738,318,4.699,339,2.841,340,3.738,341,4.517]],["title/index.html",[8,0.181,342,2.545,343,2.545]],["body/index.html",[4,0.243,12,0.035,27,0.023,28,0.023,56,2.346,278,3.269,302,2.024,344,2.835,345,2.835,346,3.951,347,2.835,348,2.835,349,2.835,350,2.835,351,2.835,352,2.835,353,4.548,354,2.835,355,2.835,356,2.835,357,2.835,358,5.496,359,2.835,360,2.835,361,2.835,362,5.357,363,2.835,364,2.835,365,3.951,366,2.835,367,2.835,368,2.835,369,2.835,370,3.951,371,2.835,372,2.835,373,2.835,374,3.951,375,3.951,376,2.835,377,2.835,378,2.835,379,2.835,380,2.835,381,2.346,382,2.835,383,2.835,384,2.835,385,2.835,386,2.835,387,2.835,388,2.835,389,2.835,390,2.835,391,2.835,392,2.835,393,2.835,394,2.835,395,2.835,396,2.835,397,2.835,398,2.835,399,2.835]],["title/modules.html",[120,2.963]],["body/modules.html",[12,0.032,27,0.032,28,0.032,119,2.882,120,3.271,381,3.791,400,4.581,401,4.581,402,4.581]],["title/overview.html",[403,3.435]],["body/overview.html",[2,1.429,12,0.032,27,0.028,28,0.028,41,1.429,44,2.386,88,2.655,118,2.708,119,3.661,121,3.016,122,3.139,123,3.139,124,2.401,125,3.968,126,3.139,127,3.139,141,2.708,164,3.139,232,4.351,291,2.708,403,3.139,404,4.795]],["title/miscellaneous/variables.html",[339,1.601,405,3.029]],["body/miscellaneous/variables.html",[8,0.308,11,0.371,12,0.034,27,0.031,28,0.031,151,2.726,204,3.093,205,3.093,209,3.716,308,3.586,339,2.726,405,3.586,406,4.333,407,4.333]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"classes/AcknowledgeMessageDto.html":{},"classes/AcknowledgeMessageResponseDto.html":{},"interfaces/AcknowledgeMessageResponseInterface.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ConsumeMessageDto.html":{},"classes/ConsumeMessageResponseDto.html":{},"interfaces/ConsumeMessageResponseInterface.html":{},"interfaces/DbInterface.html":{},"injectables/DbService.html":{},"classes/Entity.html":{},"interfaces/EntityInterface.html":{},"interfaces/EntityToJsonInterface.html":{},"interfaces/InsertMessageInterface.html":{},"classes/PublishMessageDto.html":{},"classes/PublishMessageResponseDto.html":{},"interfaces/PublishMessageResponseInterface.html":{},"classes/PublishedMessagesListResponse.html":{},"interfaces/PublishedMessagesResponseListInterface.html":{},"guards/RequeueMessageGuard.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":162,"title":{},"body":{"injectables/AppService.html":{},"injectables/DbService.html":{},"coverage.html":{}}}],["0.1.13",{"_index":331,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":328,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":327,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":310,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":312,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":315,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":311,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":313,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":314,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":306,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":307,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":232,"title":{},"body":{"injectables/DbService.html":{},"overview.html":{}}}],["1000",{"_index":264,"title":{},"body":{"classes/Entity.html":{}}}],["10000",{"_index":407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["143123412",{"_index":286,"title":{},"body":{"classes/PublishedMessagesListResponse.html":{}}}],["1431234123",{"_index":168,"title":{},"body":{"classes/ConsumeMessageResponseDto.html":{}}}],["2",{"_index":164,"title":{},"body":{"classes/ConsumeMessageDto.html":{},"overview.html":{}}}],["201",{"_index":55,"title":{},"body":{"controllers/AppController.html":{}}}],["3.0.2",{"_index":333,"title":{},"body":{"dependencies.html":{}}}],["314134134",{"_index":16,"title":{},"body":{"classes/AcknowledgeMessageDto.html":{}}}],["342341314123",{"_index":37,"title":{},"body":{"classes/AcknowledgeMessageResponseDto.html":{},"classes/ConsumeMessageResponseDto.html":{},"classes/PublishMessageResponseDto.html":{},"classes/PublishedMessagesListResponse.html":{}}}],["4.1.6",{"_index":338,"title":{},"body":{"dependencies.html":{}}}],["5.1.5",{"_index":325,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":335,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":404,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":322,"title":{},"body":{"dependencies.html":{}}}],["acknowledge",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["acknowledge(data",{"_index":53,"title":{},"body":{"controllers/AppController.html":{}}}],["acknowledge(id",{"_index":147,"title":{},"body":{"injectables/AppService.html":{}}}],["acknowledged",{"_index":32,"title":{},"body":{"classes/AcknowledgeMessageResponseDto.html":{},"interfaces/AcknowledgeMessageResponseInterface.html":{},"controllers/AppController.html":{}}}],["acknowledgemessagedto",{"_index":1,"title":{"classes/AcknowledgeMessageDto.html":{}},"body":{"classes/AcknowledgeMessageDto.html":{},"controllers/AppController.html":{},"coverage.html":{}}}],["acknowledgemessageresponsedto",{"_index":29,"title":{"classes/AcknowledgeMessageResponseDto.html":{}},"body":{"classes/AcknowledgeMessageResponseDto.html":{},"controllers/AppController.html":{},"coverage.html":{}}}],["acknowledgemessageresponseinterface",{"_index":40,"title":{"interfaces/AcknowledgeMessageResponseInterface.html":{}},"body":{"interfaces/AcknowledgeMessageResponseInterface.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"coverage.html":{}}}],["amazing",{"_index":382,"title":{},"body":{"index.html":{}}}],["apiproperty",{"_index":23,"title":{},"body":{"classes/AcknowledgeMessageDto.html":{},"classes/AcknowledgeMessageResponseDto.html":{},"classes/ConsumeMessageDto.html":{},"classes/ConsumeMessageResponseDto.html":{},"classes/PublishMessageDto.html":{},"classes/PublishMessageResponseDto.html":{},"classes/PublishedMessagesListResponse.html":{}}}],["apiproperty({example",{"_index":34,"title":{},"body":{"classes/AcknowledgeMessageResponseDto.html":{},"classes/ConsumeMessageResponseDto.html":{},"classes/PublishMessageResponseDto.html":{},"classes/PublishedMessagesListResponse.html":{}}}],["apiresponse",{"_index":94,"title":{},"body":{"controllers/AppController.html":{}}}],["app",{"_index":360,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":89,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":45,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":352,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":119,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":88,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["author",{"_index":392,"title":{},"body":{"index.html":{}}}],["backers",{"_index":383,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":156,"title":{},"body":{"injectables/AppService.html":{}}}],["body",{"_index":84,"title":{},"body":{"controllers/AppController.html":{}}}],["boolean",{"_index":33,"title":{},"body":{"classes/AcknowledgeMessageResponseDto.html":{},"interfaces/AcknowledgeMessageResponseInterface.html":{},"classes/Entity.html":{},"interfaces/EntityInterface.html":{},"interfaces/EntityToJsonInterface.html":{},"classes/PublishedMessagesListResponse.html":{},"interfaces/PublishedMessagesResponseListInterface.html":{},"guards/RequeueMessageGuard.html":{}}}],["bootstrap",{"_index":318,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":402,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":400,"title":{},"body":{"modules.html":{}}}],["building",{"_index":347,"title":{},"body":{"index.html":{}}}],["cache",{"_index":178,"title":{},"body":{"injectables/DbService.html":{}}}],["canactivate",{"_index":295,"title":{},"body":{"guards/RequeueMessageGuard.html":{}}}],["canactivate(context",{"_index":297,"title":{},"body":{"guards/RequeueMessageGuard.html":{}}}],["checkexpiration",{"_index":180,"title":{},"body":{"injectables/DbService.html":{}}}],["checkexpiration(entity",{"_index":188,"title":{},"body":{"injectables/DbService.html":{}}}],["class",{"_index":0,"title":{"classes/AcknowledgeMessageDto.html":{},"classes/AcknowledgeMessageResponseDto.html":{},"classes/ConsumeMessageDto.html":{},"classes/ConsumeMessageResponseDto.html":{},"classes/Entity.html":{},"classes/PublishMessageDto.html":{},"classes/PublishMessageResponseDto.html":{},"classes/PublishedMessagesListResponse.html":{}},"body":{"classes/AcknowledgeMessageDto.html":{},"classes/AcknowledgeMessageResponseDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ConsumeMessageDto.html":{},"classes/ConsumeMessageResponseDto.html":{},"injectables/DbService.html":{},"classes/Entity.html":{},"classes/PublishMessageDto.html":{},"classes/PublishMessageResponseDto.html":{},"classes/PublishedMessagesListResponse.html":{},"guards/RequeueMessageGuard.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AcknowledgeMessageDto.html":{},"classes/AcknowledgeMessageResponseDto.html":{},"classes/ConsumeMessageDto.html":{},"classes/ConsumeMessageResponseDto.html":{},"classes/Entity.html":{},"classes/PublishMessageDto.html":{},"classes/PublishMessageResponseDto.html":{},"classes/PublishedMessagesListResponse.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["concat(object.values(this.cache",{"_index":228,"title":{},"body":{"injectables/DbService.html":{}}}],["config/constants",{"_index":210,"title":{},"body":{"injectables/DbService.html":{}}}],["const",{"_index":157,"title":{},"body":{"injectables/AppService.html":{},"injectables/DbService.html":{}}}],["constructor",{"_index":144,"title":{},"body":{"injectables/AppService.html":{},"classes/Entity.html":{},"guards/RequeueMessageGuard.html":{}}}],["constructor(dbservice",{"_index":145,"title":{},"body":{"injectables/AppService.html":{},"guards/RequeueMessageGuard.html":{}}}],["constructor(message",{"_index":245,"title":{},"body":{"classes/Entity.html":{}}}],["constructor(private",{"_index":105,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/RequeueMessageGuard.html":{}}}],["consume",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["consume(@query",{"_index":114,"title":{},"body":{"controllers/AppController.html":{}}}],["consume(data",{"_index":64,"title":{},"body":{"controllers/AppController.html":{}}}],["consume(take",{"_index":150,"title":{},"body":{"injectables/AppService.html":{}}}],["consumemessagedto",{"_index":65,"title":{"classes/ConsumeMessageDto.html":{}},"body":{"controllers/AppController.html":{},"classes/ConsumeMessageDto.html":{},"coverage.html":{}}}],["consumemessageresponsedto",{"_index":67,"title":{"classes/ConsumeMessageResponseDto.html":{}},"body":{"controllers/AppController.html":{},"classes/ConsumeMessageResponseDto.html":{},"coverage.html":{}}}],["consumemessageresponseinterface",{"_index":70,"title":{"interfaces/ConsumeMessageResponseInterface.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/ConsumeMessageResponseInterface.html":{},"coverage.html":{}}}],["context",{"_index":300,"title":{},"body":{"guards/RequeueMessageGuard.html":{}}}],["controller",{"_index":44,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{},"overview.html":{}}}],["controllers",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["coverage",{"_index":302,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":143,"title":{},"body":{"injectables/AppService.html":{}}}],["create(message",{"_index":154,"title":{},"body":{"injectables/AppService.html":{}}}],["data",{"_index":62,"title":{},"body":{"controllers/AppController.html":{}}}],["date().gettime",{"_index":230,"title":{},"body":{"injectables/DbService.html":{},"classes/Entity.html":{}}}],["db",{"_index":179,"title":{},"body":{"injectables/DbService.html":{}}}],["db.interface",{"_index":208,"title":{},"body":{"injectables/DbService.html":{}}}],["db/db.service",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/RequeueMessageGuard.html":{}}}],["dbinterface",{"_index":171,"title":{"interfaces/DbInterface.html":{}},"body":{"interfaces/DbInterface.html":{},"injectables/DbService.html":{},"interfaces/InsertMessageInterface.html":{},"coverage.html":{}}}],["dbservice",{"_index":124,"title":{"injectables/DbService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/DbService.html":{},"guards/RequeueMessageGuard.html":{},"coverage.html":{},"overview.html":{}}}],["decorators",{"_index":14,"title":{},"body":{"classes/AcknowledgeMessageDto.html":{},"classes/AcknowledgeMessageResponseDto.html":{},"controllers/AppController.html":{},"classes/ConsumeMessageDto.html":{},"classes/ConsumeMessageResponseDto.html":{},"classes/PublishMessageDto.html":{},"classes/PublishMessageResponseDto.html":{},"classes/PublishedMessagesListResponse.html":{}}}],["default",{"_index":204,"title":{},"body":{"injectables/DbService.html":{},"classes/Entity.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":17,"title":{},"body":{"classes/AcknowledgeMessageDto.html":{},"classes/AcknowledgeMessageResponseDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ConsumeMessageDto.html":{},"classes/ConsumeMessageResponseDto.html":{},"interfaces/DbInterface.html":{},"injectables/DbService.html":{},"classes/Entity.html":{},"interfaces/EntityInterface.html":{},"classes/PublishMessageDto.html":{},"classes/PublishMessageResponseDto.html":{},"classes/PublishedMessagesListResponse.html":{},"guards/RequeueMessageGuard.html":{}}}],["delete",{"_index":217,"title":{},"body":{"injectables/DbService.html":{}}}],["deletecache",{"_index":181,"title":{},"body":{"injectables/DbService.html":{}}}],["deletecache(id",{"_index":191,"title":{},"body":{"injectables/DbService.html":{}}}],["dependencies",{"_index":121,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":56,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["development",{"_index":361,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":303,"title":{},"body":{"coverage.html":{}}}],["dto/acknowledge",{"_index":101,"title":{},"body":{"controllers/AppController.html":{}}}],["dto/consume",{"_index":98,"title":{},"body":{"controllers/AppController.html":{}}}],["dto/publish",{"_index":90,"title":{},"body":{"controllers/AppController.html":{}}}],["dto/published",{"_index":95,"title":{},"body":{"controllers/AppController.html":{}}}],["e2e",{"_index":371,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":348,"title":{},"body":{"index.html":{}}}],["email",{"_index":166,"title":{},"body":{"classes/ConsumeMessageResponseDto.html":{}}}],["entity",{"_index":158,"title":{"classes/Entity.html":{}},"body":{"injectables/AppService.html":{},"injectables/DbService.html":{},"classes/Entity.html":{},"coverage.html":{}}}],["entity(message",{"_index":213,"title":{},"body":{"injectables/DbService.html":{}}}],["entity.getid",{"_index":160,"title":{},"body":{"injectables/AppService.html":{}}}],["entity.getprocessingstartat",{"_index":231,"title":{},"body":{"injectables/DbService.html":{}}}],["entity.setisprocessing(false",{"_index":223,"title":{},"body":{"injectables/DbService.html":{}}}],["entity.setisprocessing(true",{"_index":220,"title":{},"body":{"injectables/DbService.html":{}}}],["entity.tojson",{"_index":227,"title":{},"body":{"injectables/DbService.html":{}}}],["entityinterface",{"_index":235,"title":{"interfaces/EntityInterface.html":{}},"body":{"classes/Entity.html":{},"interfaces/EntityInterface.html":{},"interfaces/EntityToJsonInterface.html":{},"coverage.html":{}}}],["entitytojsoninterface",{"_index":75,"title":{"interfaces/EntityToJsonInterface.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/DbService.html":{},"classes/Entity.html":{},"interfaces/EntityInterface.html":{},"interfaces/EntityToJsonInterface.html":{},"coverage.html":{}}}],["example",{"_index":26,"title":{},"body":{"classes/AcknowledgeMessageDto.html":{},"classes/AcknowledgeMessageResponseDto.html":{},"classes/ConsumeMessageDto.html":{},"classes/ConsumeMessageResponseDto.html":{},"classes/PublishMessageDto.html":{},"classes/PublishMessageResponseDto.html":{},"classes/PublishedMessagesListResponse.html":{}}}],["example@email.com",{"_index":276,"title":{},"body":{"classes/PublishMessageDto.html":{}}}],["examples@mail.com",{"_index":167,"title":{},"body":{"classes/ConsumeMessageResponseDto.html":{}}}],["executioncontext",{"_index":298,"title":{},"body":{"guards/RequeueMessageGuard.html":{}}}],["expire_duration_in_milli_seconds",{"_index":209,"title":{},"body":{"injectables/DbService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":25,"title":{},"body":{"classes/AcknowledgeMessageDto.html":{},"classes/AcknowledgeMessageResponseDto.html":{},"interfaces/AcknowledgeMessageResponseInterface.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ConsumeMessageDto.html":{},"classes/ConsumeMessageResponseDto.html":{},"interfaces/ConsumeMessageResponseInterface.html":{},"interfaces/DbInterface.html":{},"injectables/DbService.html":{},"classes/Entity.html":{},"interfaces/EntityInterface.html":{},"interfaces/EntityToJsonInterface.html":{},"interfaces/InsertMessageInterface.html":{},"classes/PublishMessageDto.html":{},"classes/PublishMessageResponseDto.html":{},"interfaces/PublishMessageResponseInterface.html":{},"classes/PublishedMessagesListResponse.html":{},"interfaces/PublishedMessagesResponseListInterface.html":{},"guards/RequeueMessageGuard.html":{}}}],["express",{"_index":324,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":248,"title":{},"body":{"classes/Entity.html":{},"classes/PublishedMessagesListResponse.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AcknowledgeMessageDto.html":{},"classes/AcknowledgeMessageResponseDto.html":{},"interfaces/AcknowledgeMessageResponseInterface.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ConsumeMessageDto.html":{},"classes/ConsumeMessageResponseDto.html":{},"interfaces/ConsumeMessageResponseInterface.html":{},"interfaces/DbInterface.html":{},"injectables/DbService.html":{},"classes/Entity.html":{},"interfaces/EntityInterface.html":{},"interfaces/EntityToJsonInterface.html":{},"interfaces/InsertMessageInterface.html":{},"classes/PublishMessageDto.html":{},"classes/PublishMessageResponseDto.html":{},"interfaces/PublishMessageResponseInterface.html":{},"classes/PublishedMessagesListResponse.html":{},"interfaces/PublishedMessagesResponseListInterface.html":{},"guards/RequeueMessageGuard.html":{},"coverage.html":{}}}],["first",{"_index":182,"title":{},"body":{"injectables/DbService.html":{}}}],["framework",{"_index":346,"title":{},"body":{"index.html":{}}}],["function",{"_index":317,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":340,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/consume",{"_index":113,"title":{},"body":{"controllers/AppController.html":{}}}],["get('/consume')@apiresponse({status",{"_index":66,"title":{},"body":{"controllers/AppController.html":{}}}],["get('/messages",{"_index":107,"title":{},"body":{"controllers/AppController.html":{}}}],["get('/messages')@apiresponse({status",{"_index":71,"title":{},"body":{"controllers/AppController.html":{}}}],["getcachebykey",{"_index":183,"title":{},"body":{"injectables/DbService.html":{}}}],["getcachebykey(id",{"_index":195,"title":{},"body":{"injectables/DbService.html":{}}}],["getid",{"_index":238,"title":{},"body":{"classes/Entity.html":{}}}],["getisprocessing",{"_index":239,"title":{},"body":{"classes/Entity.html":{},"interfaces/EntityInterface.html":{},"interfaces/EntityToJsonInterface.html":{}}}],["getmessage",{"_index":240,"title":{},"body":{"classes/Entity.html":{}}}],["getprocessingstartat",{"_index":241,"title":{},"body":{"classes/Entity.html":{}}}],["gettimestamp",{"_index":242,"title":{},"body":{"classes/Entity.html":{}}}],["getting",{"_index":342,"title":{"index.html":{}},"body":{}}],["grow",{"_index":378,"title":{},"body":{"index.html":{}}}],["guard",{"_index":291,"title":{"guards/RequeueMessageGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guard/requeue",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["guards",{"_index":292,"title":{},"body":{"guards/RequeueMessageGuard.html":{}}}],["here",{"_index":389,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":396,"title":{},"body":{"index.html":{}}}],["id",{"_index":10,"title":{},"body":{"classes/AcknowledgeMessageDto.html":{},"classes/AcknowledgeMessageResponseDto.html":{},"interfaces/AcknowledgeMessageResponseInterface.html":{},"injectables/AppService.html":{},"classes/ConsumeMessageResponseDto.html":{},"interfaces/ConsumeMessageResponseInterface.html":{},"interfaces/DbInterface.html":{},"injectables/DbService.html":{},"classes/Entity.html":{},"interfaces/EntityInterface.html":{},"interfaces/EntityToJsonInterface.html":{},"interfaces/InsertMessageInterface.html":{},"classes/PublishMessageResponseDto.html":{},"interfaces/PublishMessageResponseInterface.html":{},"classes/PublishedMessagesListResponse.html":{},"interfaces/PublishedMessagesResponseListInterface.html":{}}}],["identifier",{"_index":304,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":211,"title":{},"body":{"injectables/DbService.html":{},"classes/Entity.html":{},"guards/RequeueMessageGuard.html":{}}}],["import",{"_index":19,"title":{},"body":{"classes/AcknowledgeMessageDto.html":{},"classes/AcknowledgeMessageResponseDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ConsumeMessageDto.html":{},"classes/ConsumeMessageResponseDto.html":{},"injectables/DbService.html":{},"classes/Entity.html":{},"classes/PublishMessageDto.html":{},"classes/PublishMessageResponseDto.html":{},"classes/PublishedMessagesListResponse.html":{},"guards/RequeueMessageGuard.html":{}}}],["imports",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AcknowledgeMessageDto.html":{},"classes/AcknowledgeMessageResponseDto.html":{},"interfaces/AcknowledgeMessageResponseInterface.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ConsumeMessageDto.html":{},"classes/ConsumeMessageResponseDto.html":{},"interfaces/ConsumeMessageResponseInterface.html":{},"interfaces/DbInterface.html":{},"injectables/DbService.html":{},"classes/Entity.html":{},"interfaces/EntityInterface.html":{},"interfaces/EntityToJsonInterface.html":{},"interfaces/InsertMessageInterface.html":{},"classes/PublishMessageDto.html":{},"classes/PublishMessageResponseDto.html":{},"interfaces/PublishMessageResponseInterface.html":{},"classes/PublishedMessagesListResponse.html":{},"interfaces/PublishedMessagesResponseListInterface.html":{},"guards/RequeueMessageGuard.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AcknowledgeMessageDto.html":{},"classes/AcknowledgeMessageResponseDto.html":{},"interfaces/AcknowledgeMessageResponseInterface.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ConsumeMessageDto.html":{},"classes/ConsumeMessageResponseDto.html":{},"interfaces/ConsumeMessageResponseInterface.html":{},"interfaces/DbInterface.html":{},"injectables/DbService.html":{},"classes/Entity.html":{},"interfaces/EntityInterface.html":{},"interfaces/EntityToJsonInterface.html":{},"interfaces/InsertMessageInterface.html":{},"classes/PublishMessageDto.html":{},"classes/PublishMessageResponseDto.html":{},"interfaces/PublishMessageResponseInterface.html":{},"classes/PublishedMessagesListResponse.html":{},"interfaces/PublishedMessagesResponseListInterface.html":{},"guards/RequeueMessageGuard.html":{}}}],["injectable",{"_index":140,"title":{"injectables/AppService.html":{},"injectables/DbService.html":{}},"body":{"injectables/AppService.html":{},"injectables/DbService.html":{},"guards/RequeueMessageGuard.html":{},"coverage.html":{}}}],["injectables",{"_index":141,"title":{},"body":{"injectables/AppService.html":{},"injectables/DbService.html":{},"overview.html":{}}}],["insert",{"_index":173,"title":{},"body":{"interfaces/DbInterface.html":{},"injectables/DbService.html":{}}}],["insert(message",{"_index":174,"title":{},"body":{"interfaces/DbInterface.html":{},"injectables/DbService.html":{},"interfaces/InsertMessageInterface.html":{}}}],["insertcache",{"_index":184,"title":{},"body":{"injectables/DbService.html":{}}}],["insertcache(entity",{"_index":198,"title":{},"body":{"injectables/DbService.html":{}}}],["insertmessageinterface",{"_index":176,"title":{"interfaces/InsertMessageInterface.html":{}},"body":{"interfaces/DbInterface.html":{},"interfaces/InsertMessageInterface.html":{},"coverage.html":{}}}],["installation",{"_index":357,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":359,"title":{},"body":{"index.html":{}}}],["interface",{"_index":39,"title":{"interfaces/AcknowledgeMessageResponseInterface.html":{},"interfaces/ConsumeMessageResponseInterface.html":{},"interfaces/DbInterface.html":{},"interfaces/EntityInterface.html":{},"interfaces/EntityToJsonInterface.html":{},"interfaces/InsertMessageInterface.html":{},"interfaces/PublishMessageResponseInterface.html":{},"interfaces/PublishedMessagesResponseListInterface.html":{}},"body":{"interfaces/AcknowledgeMessageResponseInterface.html":{},"interfaces/ConsumeMessageResponseInterface.html":{},"interfaces/DbInterface.html":{},"interfaces/EntityInterface.html":{},"interfaces/EntityToJsonInterface.html":{},"interfaces/InsertMessageInterface.html":{},"interfaces/PublishMessageResponseInterface.html":{},"interfaces/PublishedMessagesResponseListInterface.html":{},"coverage.html":{}}}],["interface/acknowledge",{"_index":102,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["interface/consume",{"_index":99,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["interface/entity.interface",{"_index":104,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/DbService.html":{},"classes/Entity.html":{}}}],["interface/publish",{"_index":103,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["interfaces",{"_index":41,"title":{},"body":{"interfaces/AcknowledgeMessageResponseInterface.html":{},"interfaces/ConsumeMessageResponseInterface.html":{},"interfaces/DbInterface.html":{},"interfaces/EntityInterface.html":{},"interfaces/EntityToJsonInterface.html":{},"interfaces/InsertMessageInterface.html":{},"interfaces/PublishMessageResponseInterface.html":{},"interfaces/PublishedMessagesResponseListInterface.html":{},"overview.html":{}}}],["isarray",{"_index":68,"title":{},"body":{"controllers/AppController.html":{}}}],["isnotempty",{"_index":20,"title":{},"body":{"classes/AcknowledgeMessageDto.html":{},"classes/ConsumeMessageDto.html":{},"classes/PublishMessageDto.html":{}}}],["isprocessing",{"_index":236,"title":{},"body":{"classes/Entity.html":{},"interfaces/EntityInterface.html":{},"interfaces/EntityToJsonInterface.html":{},"interfaces/PublishedMessagesResponseListInterface.html":{}}}],["israel@gmail.com",{"_index":288,"title":{},"body":{"classes/PublishedMessagesListResponse.html":{}}}],["isstring",{"_index":21,"title":{},"body":{"classes/AcknowledgeMessageDto.html":{},"classes/ConsumeMessageDto.html":{},"classes/PublishMessageDto.html":{}}}],["isstring()@isnotempty()@apiproperty({example",{"_index":15,"title":{},"body":{"classes/AcknowledgeMessageDto.html":{},"classes/ConsumeMessageDto.html":{},"classes/PublishMessageDto.html":{}}}],["join",{"_index":385,"title":{},"body":{"index.html":{}}}],["json.stringify",{"_index":275,"title":{},"body":{"classes/PublishMessageDto.html":{},"classes/PublishedMessagesListResponse.html":{}}}],["kamil",{"_index":393,"title":{},"body":{"index.html":{}}}],["license",{"_index":399,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":375,"title":{},"body":{"index.html":{}}}],["list",{"_index":72,"title":{},"body":{"controllers/AppController.html":{},"classes/PublishedMessagesListResponse.html":{},"interfaces/PublishedMessagesResponseListInterface.html":{},"coverage.html":{}}}],["map((entity",{"_index":226,"title":{},"body":{"injectables/DbService.html":{}}}],["matching",{"_index":28,"title":{},"body":{"classes/AcknowledgeMessageDto.html":{},"classes/AcknowledgeMessageResponseDto.html":{},"interfaces/AcknowledgeMessageResponseInterface.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ConsumeMessageDto.html":{},"classes/ConsumeMessageResponseDto.html":{},"interfaces/ConsumeMessageResponseInterface.html":{},"interfaces/DbInterface.html":{},"injectables/DbService.html":{},"classes/Entity.html":{},"interfaces/EntityInterface.html":{},"interfaces/EntityToJsonInterface.html":{},"interfaces/InsertMessageInterface.html":{},"classes/PublishMessageDto.html":{},"classes/PublishMessageResponseDto.html":{},"interfaces/PublishMessageResponseInterface.html":{},"classes/PublishedMessagesListResponse.html":{},"interfaces/PublishedMessagesResponseListInterface.html":{},"guards/RequeueMessageGuard.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.floor(math.random",{"_index":263,"title":{},"body":{"classes/Entity.html":{}}}],["message",{"_index":30,"title":{},"body":{"classes/AcknowledgeMessageResponseDto.html":{},"interfaces/AcknowledgeMessageResponseInterface.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ConsumeMessageResponseDto.html":{},"interfaces/ConsumeMessageResponseInterface.html":{},"interfaces/DbInterface.html":{},"injectables/DbService.html":{},"classes/Entity.html":{},"interfaces/EntityInterface.html":{},"interfaces/EntityToJsonInterface.html":{},"classes/PublishMessageDto.html":{},"interfaces/PublishMessageResponseInterface.html":{},"classes/PublishedMessagesListResponse.html":{},"interfaces/PublishedMessagesResponseListInterface.html":{},"coverage.html":{}}}],["message.dto",{"_index":91,"title":{},"body":{"controllers/AppController.html":{}}}],["message.dto.ts",{"_index":7,"title":{},"body":{"classes/AcknowledgeMessageDto.html":{},"classes/ConsumeMessageDto.html":{},"classes/PublishMessageDto.html":{},"coverage.html":{}}}],["message.dto.ts:11",{"_index":18,"title":{},"body":{"classes/AcknowledgeMessageDto.html":{},"classes/ConsumeMessageDto.html":{}}}],["message.dto.ts:14",{"_index":274,"title":{},"body":{"classes/PublishMessageDto.html":{}}}],["message.guard",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["message.guard.ts",{"_index":294,"title":{},"body":{"guards/RequeueMessageGuard.html":{},"coverage.html":{}}}],["message.guard.ts:5",{"_index":296,"title":{},"body":{"guards/RequeueMessageGuard.html":{}}}],["message.guard.ts:7",{"_index":299,"title":{},"body":{"guards/RequeueMessageGuard.html":{}}}],["messages",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/PublishedMessagesResponseListInterface.html":{},"coverage.html":{}}}],["messeges",{"_index":96,"title":{},"body":{"controllers/AppController.html":{},"classes/PublishedMessagesListResponse.html":{},"coverage.html":{}}}],["messge",{"_index":92,"title":{},"body":{"controllers/AppController.html":{},"classes/PublishMessageResponseDto.html":{},"coverage.html":{}}}],["metadata",{"_index":330,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/DbInterface.html":{},"injectables/DbService.html":{},"classes/Entity.html":{},"interfaces/EntityInterface.html":{},"guards/RequeueMessageGuard.html":{}}}],["miscellaneous",{"_index":339,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":374,"title":{},"body":{"index.html":{}}}],["mode",{"_index":365,"title":{},"body":{"index.html":{}}}],["module",{"_index":118,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":120,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["more",{"_index":388,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":394,"title":{},"body":{"index.html":{}}}],["name",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/DbInterface.html":{},"injectables/DbService.html":{},"classes/Entity.html":{},"interfaces/EntityInterface.html":{},"guards/RequeueMessageGuard.html":{}}}],["nest",{"_index":353,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":398,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":87,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/DbService.html":{},"guards/RequeueMessageGuard.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":323,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":24,"title":{},"body":{"classes/AcknowledgeMessageDto.html":{},"classes/AcknowledgeMessageResponseDto.html":{},"controllers/AppController.html":{},"classes/ConsumeMessageDto.html":{},"classes/ConsumeMessageResponseDto.html":{},"classes/PublishMessageDto.html":{},"classes/PublishMessageResponseDto.html":{},"classes/PublishedMessagesListResponse.html":{},"dependencies.html":{}}}],["new",{"_index":212,"title":{},"body":{"injectables/DbService.html":{},"classes/Entity.html":{},"coverage.html":{}}}],["node.js",{"_index":345,"title":{},"body":{"index.html":{}}}],["npm",{"_index":358,"title":{},"body":{"index.html":{}}}],["null",{"_index":194,"title":{},"body":{"injectables/DbService.html":{}}}],["number",{"_index":151,"title":{},"body":{"injectables/AppService.html":{},"classes/ConsumeMessageDto.html":{},"classes/Entity.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":203,"title":{},"body":{"injectables/DbService.html":{}}}],["open",{"_index":376,"title":{},"body":{"index.html":{}}}],["optional",{"_index":61,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/DbInterface.html":{},"injectables/DbService.html":{},"classes/Entity.html":{},"interfaces/EntityInterface.html":{},"guards/RequeueMessageGuard.html":{}}}],["out",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["overview",{"_index":403,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":321,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":59,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/DbInterface.html":{},"injectables/DbService.html":{},"classes/Entity.html":{},"interfaces/EntityInterface.html":{},"guards/RequeueMessageGuard.html":{}}}],["please",{"_index":386,"title":{},"body":{"index.html":{}}}],["post",{"_index":85,"title":{},"body":{"controllers/AppController.html":{}}}],["post('/acknowledge",{"_index":116,"title":{},"body":{"controllers/AppController.html":{}}}],["post('/acknowledge')@apiresponse({status",{"_index":54,"title":{},"body":{"controllers/AppController.html":{}}}],["post('/messages",{"_index":111,"title":{},"body":{"controllers/AppController.html":{}}}],["post('/messages')@apiresponse({status",{"_index":78,"title":{},"body":{"controllers/AppController.html":{}}}],["presenttimestamp",{"_index":229,"title":{},"body":{"injectables/DbService.html":{}}}],["processing",{"_index":284,"title":{},"body":{"classes/PublishedMessagesListResponse.html":{}}}],["processingstartat",{"_index":237,"title":{},"body":{"classes/Entity.html":{}}}],["production",{"_index":367,"title":{},"body":{"index.html":{}}}],["program",{"_index":279,"title":{},"body":{"classes/PublishMessageDto.html":{}}}],["progressive",{"_index":344,"title":{},"body":{"index.html":{}}}],["project",{"_index":377,"title":{},"body":{"index.html":{}}}],["properties",{"_index":9,"title":{},"body":{"classes/AcknowledgeMessageDto.html":{},"classes/AcknowledgeMessageResponseDto.html":{},"interfaces/AcknowledgeMessageResponseInterface.html":{},"classes/ConsumeMessageDto.html":{},"classes/ConsumeMessageResponseDto.html":{},"interfaces/ConsumeMessageResponseInterface.html":{},"injectables/DbService.html":{},"classes/Entity.html":{},"interfaces/EntityToJsonInterface.html":{},"interfaces/InsertMessageInterface.html":{},"classes/PublishMessageDto.html":{},"classes/PublishMessageResponseDto.html":{},"interfaces/PublishMessageResponseInterface.html":{},"classes/PublishedMessagesListResponse.html":{},"interfaces/PublishedMessagesResponseListInterface.html":{}}}],["provide",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["published",{"_index":79,"title":{},"body":{"controllers/AppController.html":{}}}],["publishedmessageslistresponse",{"_index":73,"title":{"classes/PublishedMessagesListResponse.html":{}},"body":{"controllers/AppController.html":{},"classes/PublishedMessagesListResponse.html":{},"coverage.html":{}}}],["publishedmessagesresponselistinterface",{"_index":289,"title":{"interfaces/PublishedMessagesResponseListInterface.html":{}},"body":{"interfaces/PublishedMessagesResponseListInterface.html":{},"coverage.html":{}}}],["publishmessagedto",{"_index":77,"title":{"classes/PublishMessageDto.html":{}},"body":{"controllers/AppController.html":{},"classes/PublishMessageDto.html":{},"coverage.html":{}}}],["publishmessageresponsedto",{"_index":81,"title":{"classes/PublishMessageResponseDto.html":{}},"body":{"controllers/AppController.html":{},"classes/PublishMessageResponseDto.html":{},"coverage.html":{}}}],["publishmessageresponseinterface",{"_index":83,"title":{"interfaces/PublishMessageResponseInterface.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/PublishMessageResponseInterface.html":{},"coverage.html":{}}}],["publishmessages",{"_index":52,"title":{},"body":{"controllers/AppController.html":{}}}],["publishmessages(data",{"_index":76,"title":{},"body":{"controllers/AppController.html":{}}}],["query",{"_index":86,"title":{},"body":{"controllers/AppController.html":{}}}],["queue",{"_index":80,"title":{},"body":{"controllers/AppController.html":{}}}],["read",{"_index":387,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":106,"title":{},"body":{"controllers/AppController.html":{}}}],["reflect",{"_index":329,"title":{},"body":{"dependencies.html":{}}}],["reinsert",{"_index":185,"title":{},"body":{"injectables/DbService.html":{}}}],["reinsert(id",{"_index":200,"title":{},"body":{"injectables/DbService.html":{}}}],["repository",{"_index":356,"title":{},"body":{"index.html":{}}}],["requeueexpiredmessages",{"_index":186,"title":{},"body":{"injectables/DbService.html":{}}}],["requeuemessageguard",{"_index":134,"title":{"guards/RequeueMessageGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/RequeueMessageGuard.html":{},"coverage.html":{}}}],["reset",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["respnse.dto",{"_index":93,"title":{},"body":{"controllers/AppController.html":{}}}],["respnse.dto.ts",{"_index":280,"title":{},"body":{"classes/PublishMessageResponseDto.html":{},"coverage.html":{}}}],["respnse.dto.ts:5",{"_index":281,"title":{},"body":{"classes/PublishMessageResponseDto.html":{}}}],["response.dto",{"_index":97,"title":{},"body":{"controllers/AppController.html":{}}}],["response.dto.ts",{"_index":31,"title":{},"body":{"classes/AcknowledgeMessageResponseDto.html":{},"classes/ConsumeMessageResponseDto.html":{},"classes/PublishedMessagesListResponse.html":{},"coverage.html":{}}}],["response.dto.ts:11",{"_index":169,"title":{},"body":{"classes/ConsumeMessageResponseDto.html":{},"classes/PublishedMessagesListResponse.html":{}}}],["response.dto.ts:17",{"_index":287,"title":{},"body":{"classes/PublishedMessagesListResponse.html":{}}}],["response.dto.ts:23",{"_index":285,"title":{},"body":{"classes/PublishedMessagesListResponse.html":{}}}],["response.dto.ts:5",{"_index":38,"title":{},"body":{"classes/AcknowledgeMessageResponseDto.html":{},"classes/ConsumeMessageResponseDto.html":{},"classes/PublishedMessagesListResponse.html":{}}}],["response.dto.ts:8",{"_index":36,"title":{},"body":{"classes/AcknowledgeMessageResponseDto.html":{},"classes/ConsumeMessageResponseDto.html":{}}}],["response.interface",{"_index":100,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["response.interface.ts",{"_index":43,"title":{},"body":{"interfaces/AcknowledgeMessageResponseInterface.html":{},"interfaces/ConsumeMessageResponseInterface.html":{},"interfaces/PublishMessageResponseInterface.html":{},"interfaces/PublishedMessagesResponseListInterface.html":{},"coverage.html":{}}}],["results",{"_index":27,"title":{},"body":{"classes/AcknowledgeMessageDto.html":{},"classes/AcknowledgeMessageResponseDto.html":{},"interfaces/AcknowledgeMessageResponseInterface.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ConsumeMessageDto.html":{},"classes/ConsumeMessageResponseDto.html":{},"interfaces/ConsumeMessageResponseInterface.html":{},"interfaces/DbInterface.html":{},"injectables/DbService.html":{},"classes/Entity.html":{},"interfaces/EntityInterface.html":{},"interfaces/EntityToJsonInterface.html":{},"interfaces/InsertMessageInterface.html":{},"classes/PublishMessageDto.html":{},"classes/PublishMessageResponseDto.html":{},"interfaces/PublishMessageResponseInterface.html":{},"classes/PublishedMessagesListResponse.html":{},"interfaces/PublishedMessagesResponseListInterface.html":{},"guards/RequeueMessageGuard.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":109,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/DbService.html":{},"classes/Entity.html":{},"guards/RequeueMessageGuard.html":{}}}],["returns",{"_index":63,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/DbInterface.html":{},"injectables/DbService.html":{},"classes/Entity.html":{},"interfaces/EntityInterface.html":{},"guards/RequeueMessageGuard.html":{}}}],["rimraf",{"_index":332,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":362,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":334,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":349,"title":{},"body":{"index.html":{}}}],["server",{"_index":350,"title":{},"body":{"index.html":{}}}],["setisprocessing",{"_index":243,"title":{},"body":{"classes/Entity.html":{},"interfaces/EntityInterface.html":{}}}],["setisprocessing(isprocessing",{"_index":257,"title":{},"body":{"classes/Entity.html":{},"interfaces/EntityInterface.html":{},"interfaces/EntityToJsonInterface.html":{}}}],["side",{"_index":351,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AcknowledgeMessageDto.html":{},"classes/AcknowledgeMessageResponseDto.html":{},"interfaces/AcknowledgeMessageResponseInterface.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ConsumeMessageDto.html":{},"classes/ConsumeMessageResponseDto.html":{},"interfaces/ConsumeMessageResponseInterface.html":{},"interfaces/DbInterface.html":{},"injectables/DbService.html":{},"classes/Entity.html":{},"interfaces/EntityInterface.html":{},"interfaces/EntityToJsonInterface.html":{},"interfaces/InsertMessageInterface.html":{},"classes/PublishMessageDto.html":{},"classes/PublishMessageResponseDto.html":{},"interfaces/PublishMessageResponseInterface.html":{},"classes/PublishedMessagesListResponse.html":{},"interfaces/PublishedMessagesResponseListInterface.html":{},"guards/RequeueMessageGuard.html":{},"index.html":{}}}],["sponsors",{"_index":380,"title":{},"body":{"index.html":{}}}],["src/.../constants.ts",{"_index":406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":341,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:27",{"_index":74,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:37",{"_index":82,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:50",{"_index":69,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:60",{"_index":58,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":142,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:11",{"_index":155,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:16",{"_index":149,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:20",{"_index":152,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:36",{"_index":148,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:9",{"_index":146,"title":{},"body":{"injectables/AppService.html":{}}}],["src/config/constants.ts",{"_index":308,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/db/db.interface.ts",{"_index":172,"title":{},"body":{"interfaces/DbInterface.html":{},"interfaces/InsertMessageInterface.html":{},"coverage.html":{}}}],["src/db/db.interface.ts:5",{"_index":175,"title":{},"body":{"interfaces/DbInterface.html":{}}}],["src/db/db.service.ts",{"_index":177,"title":{},"body":{"injectables/DbService.html":{},"coverage.html":{}}}],["src/db/db.service.ts:10",{"_index":206,"title":{},"body":{"injectables/DbService.html":{}}}],["src/db/db.service.ts:12",{"_index":197,"title":{},"body":{"injectables/DbService.html":{}}}],["src/db/db.service.ts:18",{"_index":199,"title":{},"body":{"injectables/DbService.html":{}}}],["src/db/db.service.ts:22",{"_index":196,"title":{},"body":{"injectables/DbService.html":{}}}],["src/db/db.service.ts:26",{"_index":192,"title":{},"body":{"injectables/DbService.html":{}}}],["src/db/db.service.ts:32",{"_index":193,"title":{},"body":{"injectables/DbService.html":{}}}],["src/db/db.service.ts:42",{"_index":201,"title":{},"body":{"injectables/DbService.html":{}}}],["src/db/db.service.ts:50",{"_index":187,"title":{},"body":{"injectables/DbService.html":{}}}],["src/db/db.service.ts:56",{"_index":189,"title":{},"body":{"injectables/DbService.html":{}}}],["src/db/db.service.ts:67",{"_index":202,"title":{},"body":{"injectables/DbService.html":{}}}],["src/db/db.service.ts:9",{"_index":207,"title":{},"body":{"injectables/DbService.html":{}}}],["src/dto/acknowledge",{"_index":6,"title":{},"body":{"classes/AcknowledgeMessageDto.html":{},"classes/AcknowledgeMessageResponseDto.html":{},"coverage.html":{}}}],["src/dto/consume",{"_index":163,"title":{},"body":{"classes/ConsumeMessageDto.html":{},"classes/ConsumeMessageResponseDto.html":{},"coverage.html":{}}}],["src/dto/publish",{"_index":272,"title":{},"body":{"classes/PublishMessageDto.html":{},"classes/PublishMessageResponseDto.html":{},"coverage.html":{}}}],["src/dto/published",{"_index":283,"title":{},"body":{"classes/PublishedMessagesListResponse.html":{},"coverage.html":{}}}],["src/entity.ts",{"_index":234,"title":{},"body":{"classes/Entity.html":{},"coverage.html":{}}}],["src/entity.ts:10",{"_index":251,"title":{},"body":{"classes/Entity.html":{}}}],["src/entity.ts:11",{"_index":246,"title":{},"body":{"classes/Entity.html":{}}}],["src/entity.ts:19",{"_index":252,"title":{},"body":{"classes/Entity.html":{}}}],["src/entity.ts:22",{"_index":254,"title":{},"body":{"classes/Entity.html":{}}}],["src/entity.ts:25",{"_index":256,"title":{},"body":{"classes/Entity.html":{}}}],["src/entity.ts:28",{"_index":258,"title":{},"body":{"classes/Entity.html":{}}}],["src/entity.ts:34",{"_index":253,"title":{},"body":{"classes/Entity.html":{}}}],["src/entity.ts:37",{"_index":255,"title":{},"body":{"classes/Entity.html":{}}}],["src/entity.ts:40",{"_index":259,"title":{},"body":{"classes/Entity.html":{}}}],["src/entity.ts:7",{"_index":247,"title":{},"body":{"classes/Entity.html":{}}}],["src/entity.ts:8",{"_index":250,"title":{},"body":{"classes/Entity.html":{}}}],["src/entity.ts:9",{"_index":249,"title":{},"body":{"classes/Entity.html":{}}}],["src/guard/requeue",{"_index":293,"title":{},"body":{"guards/RequeueMessageGuard.html":{},"coverage.html":{}}}],["src/interface/acknowledge",{"_index":42,"title":{},"body":{"interfaces/AcknowledgeMessageResponseInterface.html":{},"coverage.html":{}}}],["src/interface/consume",{"_index":170,"title":{},"body":{"interfaces/ConsumeMessageResponseInterface.html":{},"coverage.html":{}}}],["src/interface/entity.interface.ts",{"_index":268,"title":{},"body":{"interfaces/EntityInterface.html":{},"interfaces/EntityToJsonInterface.html":{},"coverage.html":{}}}],["src/interface/entity.interface.ts:10",{"_index":270,"title":{},"body":{"interfaces/EntityInterface.html":{}}}],["src/interface/entity.interface.ts:11",{"_index":269,"title":{},"body":{"interfaces/EntityInterface.html":{}}}],["src/interface/entity.interface.ts:9",{"_index":271,"title":{},"body":{"interfaces/EntityInterface.html":{}}}],["src/interface/publish",{"_index":282,"title":{},"body":{"interfaces/PublishMessageResponseInterface.html":{},"coverage.html":{}}}],["src/interface/published",{"_index":290,"title":{},"body":{"interfaces/PublishedMessagesResponseListInterface.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":316,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":363,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":366,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":368,"title":{},"body":{"index.html":{}}}],["started",{"_index":343,"title":{"index.html":{}},"body":{}}],["starter",{"_index":355,"title":{},"body":{"index.html":{}}}],["statements",{"_index":305,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":108,"title":{},"body":{"controllers/AppController.html":{}}}],["stay",{"_index":390,"title":{},"body":{"index.html":{}}}],["string",{"_index":13,"title":{},"body":{"classes/AcknowledgeMessageDto.html":{},"classes/AcknowledgeMessageResponseDto.html":{},"interfaces/AcknowledgeMessageResponseInterface.html":{},"injectables/AppService.html":{},"classes/ConsumeMessageResponseDto.html":{},"interfaces/ConsumeMessageResponseInterface.html":{},"interfaces/DbInterface.html":{},"injectables/DbService.html":{},"classes/Entity.html":{},"interfaces/EntityInterface.html":{},"interfaces/EntityToJsonInterface.html":{},"interfaces/InsertMessageInterface.html":{},"classes/PublishMessageDto.html":{},"classes/PublishMessageResponseDto.html":{},"interfaces/PublishMessageResponseInterface.html":{},"classes/PublishedMessagesListResponse.html":{},"interfaces/PublishedMessagesResponseListInterface.html":{}}}],["string(new",{"_index":262,"title":{},"body":{"classes/Entity.html":{}}}],["subject",{"_index":277,"title":{},"body":{"classes/PublishMessageDto.html":{}}}],["successfully",{"_index":57,"title":{},"body":{"controllers/AppController.html":{}}}],["support",{"_index":381,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":401,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":336,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":320,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":319,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":153,"title":{},"body":{"injectables/AppService.html":{},"classes/ConsumeMessageDto.html":{}}}],["test",{"_index":278,"title":{},"body":{"classes/PublishMessageDto.html":{},"index.html":{}}}],["test:covsupport",{"_index":373,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":372,"title":{},"body":{"index.html":{}}}],["tests",{"_index":370,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":379,"title":{},"body":{"index.html":{}}}],["this.appservice.acknowledge(data.id",{"_index":117,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.all",{"_index":110,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.consume(data.take",{"_index":115,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.create(data.message",{"_index":112,"title":{},"body":{"controllers/AppController.html":{}}}],["this.cache[entity.getid",{"_index":215,"title":{},"body":{"injectables/DbService.html":{}}}],["this.cache[id",{"_index":216,"title":{},"body":{"injectables/DbService.html":{}}}],["this.checkexpiration(this.cache[key",{"_index":233,"title":{},"body":{"injectables/DbService.html":{}}}],["this.db",{"_index":225,"title":{},"body":{"injectables/DbService.html":{}}}],["this.db.length",{"_index":218,"title":{},"body":{"injectables/DbService.html":{}}}],["this.db.push(entity",{"_index":214,"title":{},"body":{"injectables/DbService.html":{}}}],["this.db.shift",{"_index":219,"title":{},"body":{"injectables/DbService.html":{}}}],["this.dbservice.all",{"_index":161,"title":{},"body":{"injectables/AppService.html":{}}}],["this.dbservice.insert(message",{"_index":159,"title":{},"body":{"injectables/AppService.html":{}}}],["this.dbservice.requeueexpiredmessages",{"_index":301,"title":{},"body":{"guards/RequeueMessageGuard.html":{}}}],["this.deletecache(id",{"_index":224,"title":{},"body":{"injectables/DbService.html":{}}}],["this.getcachebykey(id",{"_index":222,"title":{},"body":{"injectables/DbService.html":{}}}],["this.id",{"_index":261,"title":{},"body":{"classes/Entity.html":{}}}],["this.insertcache(entity",{"_index":221,"title":{},"body":{"injectables/DbService.html":{}}}],["this.isprocessing",{"_index":266,"title":{},"body":{"classes/Entity.html":{}}}],["this.message",{"_index":260,"title":{},"body":{"classes/Entity.html":{}}}],["this.processingstartat",{"_index":267,"title":{},"body":{"classes/Entity.html":{}}}],["this.timestamp",{"_index":265,"title":{},"body":{"classes/Entity.html":{}}}],["timestamp",{"_index":165,"title":{},"body":{"classes/ConsumeMessageResponseDto.html":{},"interfaces/ConsumeMessageResponseInterface.html":{},"classes/Entity.html":{},"interfaces/EntityInterface.html":{},"interfaces/EntityToJsonInterface.html":{},"classes/PublishedMessagesListResponse.html":{},"interfaces/PublishedMessagesResponseListInterface.html":{}}}],["tojson",{"_index":244,"title":{},"body":{"classes/Entity.html":{},"interfaces/EntityInterface.html":{},"interfaces/EntityToJsonInterface.html":{}}}],["touch",{"_index":391,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":326,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":35,"title":{},"body":{"classes/AcknowledgeMessageResponseDto.html":{},"controllers/AppController.html":{},"guards/RequeueMessageGuard.html":{}}}],["twitter",{"_index":397,"title":{},"body":{"index.html":{}}}],["type",{"_index":11,"title":{},"body":{"classes/AcknowledgeMessageDto.html":{},"classes/AcknowledgeMessageResponseDto.html":{},"interfaces/AcknowledgeMessageResponseInterface.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ConsumeMessageDto.html":{},"classes/ConsumeMessageResponseDto.html":{},"interfaces/ConsumeMessageResponseInterface.html":{},"interfaces/DbInterface.html":{},"injectables/DbService.html":{},"classes/Entity.html":{},"interfaces/EntityInterface.html":{},"interfaces/EntityToJsonInterface.html":{},"interfaces/InsertMessageInterface.html":{},"classes/PublishMessageDto.html":{},"classes/PublishMessageResponseDto.html":{},"interfaces/PublishMessageResponseInterface.html":{},"classes/PublishedMessagesListResponse.html":{},"interfaces/PublishedMessagesResponseListInterface.html":{},"guards/RequeueMessageGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":354,"title":{},"body":{"index.html":{}}}],["ui",{"_index":337,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":273,"title":{},"body":{"classes/PublishMessageDto.html":{},"classes/PublishedMessagesListResponse.html":{}}}],["unit",{"_index":369,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":22,"title":{},"body":{"classes/AcknowledgeMessageDto.html":{},"classes/ConsumeMessageDto.html":{},"classes/PublishMessageDto.html":{},"dependencies.html":{}}}],["value",{"_index":205,"title":{},"body":{"injectables/DbService.html":{},"classes/Entity.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":309,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":405,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":190,"title":{},"body":{"injectables/DbService.html":{},"classes/Entity.html":{},"interfaces/EntityInterface.html":{},"interfaces/EntityToJsonInterface.html":{}}}],["watch",{"_index":364,"title":{},"body":{"index.html":{}}}],["website",{"_index":395,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":384,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AcknowledgeMessageDto.html":{"url":"classes/AcknowledgeMessageDto.html","title":"class - AcknowledgeMessageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcknowledgeMessageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/acknowledge-message.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: '314134134', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/acknowledge-message.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class AcknowledgeMessageDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: '314134134',\n    type: 'string',\n  })\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcknowledgeMessageResponseDto.html":{"url":"classes/AcknowledgeMessageResponseDto.html","title":"class - AcknowledgeMessageResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcknowledgeMessageResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/acknowledge-message-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                acknowledged\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        acknowledged\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/acknowledge-message-response.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '342341314123', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/acknowledge-message-response.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class AcknowledgeMessageResponseDto {\n  @ApiProperty({ example: '342341314123', type: 'string' })\n  id: string;\n\n  @ApiProperty({ example: true, type: 'boolean' })\n  acknowledged: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AcknowledgeMessageResponseInterface.html":{"url":"interfaces/AcknowledgeMessageResponseInterface.html","title":"interface - AcknowledgeMessageResponseInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AcknowledgeMessageResponseInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interface/acknowledge-message-response.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            acknowledged\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        acknowledged\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        acknowledged:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AcknowledgeMessageResponseInterface {\n  id: string;\n  acknowledged: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                acknowledge\n                            \n                            \n                                consume\n                            \n                            \n                                messages\n                            \n                            \n                                publishMessages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        acknowledge\n                        \n                    \n                \n            \n            \n                \nacknowledge(data: AcknowledgeMessageDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/acknowledge')@ApiResponse({status: 201, description: 'Acknowledged successfully', type: AcknowledgeMessageResponseDto})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AcknowledgeMessageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AcknowledgeMessageResponseInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consume\n                        \n                    \n                \n            \n            \n                \nconsume(data: ConsumeMessageDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/consume')@ApiResponse({status: 201, description: 'Get messages to consume', type: ConsumeMessageResponseDto, isArray: true})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ConsumeMessageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ConsumeMessageResponseInterface[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messages\n                        \n                    \n                \n            \n            \n                \nmessages()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/messages')@ApiResponse({status: 201, description: 'List of all messages', type: PublishedMessagesListResponse, isArray: true})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityToJsonInterface[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        publishMessages\n                        \n                    \n                \n            \n            \n                \npublishMessages(data: PublishMessageDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/messages')@ApiResponse({status: 201, description: 'Message published to the queue successfully', type: PublishMessageResponseDto})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                PublishMessageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PublishMessageResponseInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, Query } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { PublishMessageDto } from './dto/publish-message.dto';\nimport { PublishMessageResponseDto } from './dto/publish-messge-respnse.dto';\nimport { ApiResponse } from '@nestjs/swagger';\nimport { PublishedMessagesListResponse } from './dto/published-messeges-list-response.dto';\nimport { ConsumeMessageResponseDto } from './dto/consume-message-response.dto';\nimport { ConsumeMessageResponseInterface } from './interface/consume-message-response.interface';\nimport { AcknowledgeMessageDto } from './dto/acknowledge-message.dto';\nimport { AcknowledgeMessageResponseInterface } from './interface/acknowledge-message-response.interface';\nimport { AcknowledgeMessageResponseDto } from './dto/acknowledge-message-response.dto';\nimport { PublishMessageResponseInterface } from './interface/publish-message-response.interface';\nimport { EntityToJsonInterface } from './interface/entity.interface';\nimport { ConsumeMessageDto } from './dto/consume-message.dto';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get('/messages')\n  @ApiResponse({\n    status: 201,\n    description: 'List of all messages',\n    type: PublishedMessagesListResponse,\n    isArray: true,\n  })\n  messages(): EntityToJsonInterface[] {\n    return this.appService.all();\n  }\n\n  @Post('/messages')\n  @ApiResponse({\n    status: 201,\n    description: 'Message published to the queue successfully',\n    type: PublishMessageResponseDto,\n  })\n  publishMessages(\n    @Body() data: PublishMessageDto,\n  ): PublishMessageResponseInterface {\n    return this.appService.create(data.message);\n  }\n\n  @Get('/consume')\n  @ApiResponse({\n    status: 201,\n    description: 'Get messages to consume',\n    type: ConsumeMessageResponseDto,\n    isArray: true,\n  })\n  consume(@Query() data: ConsumeMessageDto): ConsumeMessageResponseInterface[] {\n    return this.appService.consume(data.take);\n  }\n\n  @Post('/acknowledge')\n  @ApiResponse({\n    status: 201,\n    description: 'Acknowledged successfully',\n    type: AcknowledgeMessageResponseDto,\n  })\n  acknowledge(\n    @Body() data: AcknowledgeMessageDto,\n  ): AcknowledgeMessageResponseInterface {\n    return this.appService.acknowledge(data.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nDbService\n\nDbService\n\nAppModule -->\n\nDbService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            DbService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { DbService } from './db/db.service';\nimport { APP_GUARD } from '@nestjs/core';\nimport { RequeueMessageGuard } from './guard/requeue-message.guard';\n\n@Module({\n  imports: [],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    DbService,\n    { provide: APP_GUARD, useClass: RequeueMessageGuard },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                acknowledge\n                            \n                            \n                                all\n                            \n                            \n                                consume\n                            \n                            \n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dbService: DbService)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dbService\n                                                  \n                                                        \n                                                                        DbService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        acknowledge\n                        \n                    \n                \n            \n            \n                \nacknowledge(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AcknowledgeMessageResponseInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        all\n                        \n                    \n                \n            \n            \n                \nall()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityToJsonInterface[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consume\n                        \n                    \n                \n            \n            \n                \nconsume(take: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    take\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ConsumeMessageResponseInterface[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PublishMessageResponseInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { DbService } from './db/db.service';\nimport { PublishMessageResponseInterface } from './interface/publish-message-response.interface';\nimport { EntityToJsonInterface } from './interface/entity.interface';\nimport { ConsumeMessageResponseInterface } from './interface/consume-message-response.interface';\nimport { AcknowledgeMessageResponseInterface } from './interface/acknowledge-message-response.interface';\n\n@Injectable()\nexport class AppService {\n  constructor(private dbService: DbService) {}\n  create(message: string): PublishMessageResponseInterface {\n    const entity = this.dbService.insert(message);\n    return { id: entity.getId() };\n  }\n\n  all(): EntityToJsonInterface[] {\n    return this.dbService.all();\n  }\n\n  consume(take: number): ConsumeMessageResponseInterface[] {\n    const messages = [];\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConsumeMessageDto.html":{"url":"classes/ConsumeMessageDto.html","title":"class - ConsumeMessageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConsumeMessageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/consume-message.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: '2', type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/consume-message.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class ConsumeMessageDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: '2',\n    type: 'number',\n  })\n  take: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConsumeMessageResponseDto.html":{"url":"classes/ConsumeMessageResponseDto.html","title":"class - ConsumeMessageResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConsumeMessageResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/consume-message-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                message\n                            \n                            \n                                timestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '342341314123', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/consume-message-response.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '{email: examples@mail.com}', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/consume-message-response.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timestamp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1431234123', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/consume-message-response.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class ConsumeMessageResponseDto {\n  @ApiProperty({ example: '342341314123', type: 'string' })\n  id: string;\n\n  @ApiProperty({ example: '{email: examples@mail.com}', type: 'string' })\n  message: string;\n\n  @ApiProperty({ example: '1431234123', type: 'string' })\n  timestamp: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConsumeMessageResponseInterface.html":{"url":"interfaces/ConsumeMessageResponseInterface.html","title":"interface - ConsumeMessageResponseInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConsumeMessageResponseInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interface/consume-message-response.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ConsumeMessageResponseInterface {\n  id: string;\n  message: string;\n  timestamp: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DbInterface.html":{"url":"interfaces/DbInterface.html","title":"interface - DbInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DbInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/db.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        insert\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        insert\n                        \n                    \n                \n            \n            \n                \ninsert(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/db/db.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         InsertMessageInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface InsertMessageInterface {\n  id: string;\n}\nexport interface DbInterface {\n  insert(message: string): InsertMessageInterface;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DbService.html":{"url":"injectables/DbService.html","title":"injectable - DbService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DbService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/db.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cache\n                            \n                            \n                                db\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                all\n                            \n                            \n                                checkExpiration\n                            \n                            \n                                deleteCache\n                            \n                            \n                                first\n                            \n                            \n                                getCacheByKey\n                            \n                            \n                                insert\n                            \n                            \n                                insertCache\n                            \n                            \n                                reInsert\n                            \n                            \n                                reQueueExpiredMessages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        all\n                        \n                    \n                \n            \n            \n                \nall()\n                \n            \n\n\n            \n                \n                    Defined in src/db/db.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityToJsonInterface[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkExpiration\n                        \n                    \n                \n            \n            \n                \ncheckExpiration(entity: Entity)\n                \n            \n\n\n            \n                \n                    Defined in src/db/db.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                Entity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteCache\n                        \n                    \n                \n            \n            \n                \ndeleteCache(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/db/db.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Entity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        first\n                        \n                    \n                \n            \n            \n                \nfirst()\n                \n            \n\n\n            \n                \n                    Defined in src/db/db.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Entity | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCacheByKey\n                        \n                    \n                \n            \n            \n                \ngetCacheByKey(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/db/db.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Entity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        insert\n                        \n                    \n                \n            \n            \n                \ninsert(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/db/db.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Entity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        insertCache\n                        \n                    \n                \n            \n            \n                \ninsertCache(entity: Entity)\n                \n            \n\n\n            \n                \n                    Defined in src/db/db.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                Entity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reInsert\n                        \n                    \n                \n            \n            \n                \nreInsert(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/db/db.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Entity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reQueueExpiredMessages\n                        \n                    \n                \n            \n            \n                \nreQueueExpiredMessages()\n                \n            \n\n\n            \n                \n                    Defined in src/db/db.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cache\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/db/db.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        db\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Entity[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/db/db.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Entity } from '../entity';\nimport { DbInterface } from './db.interface';\nimport { EntityToJsonInterface } from '../interface/entity.interface';\nimport { EXPIRE_DURATION_IN_MILLI_SECONDS } from '../config/constants';\n\n@Injectable()\nexport class DbService implements DbInterface {\n  db: Entity[] = [];\n  cache = {};\n\n  insert(message: string): Entity {\n    const entity = new Entity(message);\n    this.db.push(entity);\n    return entity;\n  }\n\n  insertCache(entity: Entity): void {\n    this.cache[entity.getId()] = entity;\n  }\n\n  getCacheByKey(id: string): Entity {\n    return this.cache[id];\n  }\n\n  deleteCache(id: string): Entity {\n    const entity = this.cache[id];\n    delete this.cache[id];\n    return entity;\n  }\n\n  first(): Entity | null {\n    if (this.db.length === 0) {\n      return null;\n    }\n    const entity = this.db.shift();\n    entity.setIsProcessing(true);\n    this.insertCache(entity);\n    return entity;\n  }\n\n  reInsert(id: string): Entity {\n    const entity = this.getCacheByKey(id);\n    entity.setIsProcessing(false);\n    this.db.push(entity);\n    this.deleteCache(id);\n    return entity;\n  }\n\n  all(): EntityToJsonInterface[] {\n    return this.db\n      .map((entity) => entity.toJson())\n      .concat(Object.values(this.cache));\n  }\n\n  checkExpiration(entity: Entity) {\n    const presentTimeStamp = new Date().getTime();\n\n    if (\n      entity.getProcessingStartAt() > 1 &&\n      entity.getProcessingStartAt() + EXPIRE_DURATION_IN_MILLI_SECONDS  this.checkExpiration(this.cache[key]));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Entity.html":{"url":"classes/Entity.html","title":"class - Entity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Entity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            EntityInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                isProcessing\n                            \n                            \n                                message\n                            \n                            \n                                processingStartAt\n                            \n                            \n                                timestamp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getId\n                            \n                            \n                                getIsProcessing\n                            \n                            \n                                getMessage\n                            \n                            \n                                getProcessingStartAt\n                            \n                            \n                                getTimestamp\n                            \n                            \n                                setIsProcessing\n                            \n                            \n                                toJson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message)\n                    \n                \n                        \n                            \n                                Defined in src/entity.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isProcessing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false as boolean\n                    \n                \n                    \n                        \n                                Defined in src/entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processingStartAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timestamp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/entity.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getId\n                        \n                    \n                \n            \n            \n                \ngetId()\n                \n            \n\n\n            \n                \n                    Defined in src/entity.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIsProcessing\n                        \n                    \n                \n            \n            \n                \ngetIsProcessing()\n                \n            \n\n\n            \n                \n                    Defined in src/entity.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMessage\n                        \n                    \n                \n            \n            \n                \ngetMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/entity.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProcessingStartAt\n                        \n                    \n                \n            \n            \n                \ngetProcessingStartAt()\n                \n            \n\n\n            \n                \n                    Defined in src/entity.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTimestamp\n                        \n                    \n                \n            \n            \n                \ngetTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in src/entity.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setIsProcessing\n                        \n                    \n                \n            \n            \n                \nsetIsProcessing(isProcessing: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/entity.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isProcessing\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toJson\n                        \n                    \n                \n            \n            \n                \ntoJson()\n                \n            \n\n\n            \n                \n                    Defined in src/entity.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityToJsonInterface\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  EntityInterface,\n  EntityToJsonInterface,\n} from './interface/entity.interface';\n\nexport class Entity implements EntityInterface {\n  id: string;\n  message: string;\n  isProcessing = false as boolean;\n  timestamp: string;\n  processingStartAt: number;\n\n  constructor(message) {\n    this.message = message;\n    this.id = String(new Date().getTime() + Math.floor(Math.random() * 1000));\n    this.timestamp = String(new Date().getTime());\n  }\n\n  getId(): string {\n    return this.id;\n  }\n  getMessage(): string {\n    return this.message;\n  }\n  getTimestamp(): string {\n    return this.timestamp;\n  }\n  setIsProcessing(isProcessing: boolean): void {\n    this.isProcessing = isProcessing;\n    if (isProcessing) {\n      this.processingStartAt = new Date().getTime();\n    }\n  }\n  getIsProcessing() {\n    return this.isProcessing;\n  }\n  getProcessingStartAt(): number {\n    return this.processingStartAt;\n  }\n  toJson(): EntityToJsonInterface {\n    return {\n      id: this.id,\n      message: this.message,\n      timestamp: this.timestamp,\n      isProcessing: this.isProcessing,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntityInterface.html":{"url":"interfaces/EntityInterface.html","title":"interface - EntityInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EntityInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interface/entity.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getIsProcessing\n                                    \n                                \n                                \n                                    \n                                        setIsProcessing\n                                    \n                                \n                                \n                                    \n                                        toJson\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getIsProcessing\n                        \n                    \n                \n            \n            \n                \ngetIsProcessing()\n                \n            \n\n\n            \n                \n                    Defined in src/interface/entity.interface.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setIsProcessing\n                        \n                    \n                \n            \n            \n                \nsetIsProcessing(isProcessing: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/interface/entity.interface.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isProcessing\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toJson\n                        \n                    \n                \n            \n            \n                \ntoJson()\n                \n            \n\n\n            \n                \n                    Defined in src/interface/entity.interface.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityToJsonInterface\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface EntityToJsonInterface {\n  id: string;\n  isProcessing: boolean;\n  message: string;\n  timestamp: string;\n}\n\nexport interface EntityInterface {\n  toJson(): EntityToJsonInterface;\n  setIsProcessing(isProcessing: boolean): void;\n  getIsProcessing(): boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntityToJsonInterface.html":{"url":"interfaces/EntityToJsonInterface.html","title":"interface - EntityToJsonInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EntityToJsonInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interface/entity.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            isProcessing\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isProcessing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isProcessing:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface EntityToJsonInterface {\n  id: string;\n  isProcessing: boolean;\n  message: string;\n  timestamp: string;\n}\n\nexport interface EntityInterface {\n  toJson(): EntityToJsonInterface;\n  setIsProcessing(isProcessing: boolean): void;\n  getIsProcessing(): boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InsertMessageInterface.html":{"url":"interfaces/InsertMessageInterface.html","title":"interface - InsertMessageInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InsertMessageInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/db.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface InsertMessageInterface {\n  id: string;\n}\nexport interface DbInterface {\n  insert(message: string): InsertMessageInterface;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PublishMessageDto.html":{"url":"classes/PublishMessageDto.html","title":"class - PublishMessageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PublishMessageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/publish-message.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: undefined, type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/publish-message.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class PublishMessageDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: JSON.stringify({\n      to: 'example@email.com',\n      subject: 'Test program',\n    }),\n    type: 'string',\n  })\n  message: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PublishMessageResponseDto.html":{"url":"classes/PublishMessageResponseDto.html","title":"class - PublishMessageResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PublishMessageResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/publish-messge-respnse.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '342341314123', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/publish-messge-respnse.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class PublishMessageResponseDto {\n  @ApiProperty({ example: '342341314123', type: 'string' })\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PublishMessageResponseInterface.html":{"url":"interfaces/PublishMessageResponseInterface.html","title":"interface - PublishMessageResponseInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PublishMessageResponseInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interface/publish-message-response.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PublishMessageResponseInterface {\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PublishedMessagesListResponse.html":{"url":"classes/PublishedMessagesListResponse.html","title":"class - PublishedMessagesListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PublishedMessagesListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/published-messeges-list-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                message\n                            \n                            \n                                processing\n                            \n                            \n                                timestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '342341314123', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/published-messeges-list-response.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/published-messeges-list-response.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: false, type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/published-messeges-list-response.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timestamp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '143123412', type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/published-messeges-list-response.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class PublishedMessagesListResponse {\n  @ApiProperty({ example: '342341314123', type: 'string' })\n  id: string;\n\n  @ApiProperty({\n    example: JSON.stringify({ to: 'israel@gmail.com' }),\n    type: 'string',\n  })\n  message: string;\n\n  @ApiProperty({\n    example: '143123412',\n    type: 'string',\n  })\n  timestamp: string;\n\n  @ApiProperty({\n    example: false,\n    type: 'boolean',\n  })\n  processing: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PublishedMessagesResponseListInterface.html":{"url":"interfaces/PublishedMessagesResponseListInterface.html","title":"interface - PublishedMessagesResponseListInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PublishedMessagesResponseListInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interface/published-messages-list-response.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            isProcessing\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isProcessing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isProcessing:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PublishedMessagesResponseListInterface {\n  id: string;\n  message: string;\n  timestamp: string;\n  isProcessing: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RequeueMessageGuard.html":{"url":"guards/RequeueMessageGuard.html","title":"guard - RequeueMessageGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RequeueMessageGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guard/requeue-message.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(dbService: DbService)\n                    \n                \n                        \n                            \n                                Defined in src/guard/requeue-message.guard.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dbService\n                                                  \n                                                        \n                                                                        DbService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guard/requeue-message.guard.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { DbService } from '../db/db.service';\n\n@Injectable()\nexport class RequeueMessageGuard implements CanActivate {\n  constructor(private dbService: DbService) {}\n  canActivate(context: ExecutionContext): boolean {\n    this.dbService.reQueueExpiredMessages();\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            EXPIRE_DURATION_IN_MILLI_SECONDS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/db/db.interface.ts\n            \n            interface\n            DbInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/db/db.interface.ts\n            \n            interface\n            InsertMessageInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/db/db.service.ts\n            \n            injectable\n            DbService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/dto/acknowledge-message-response.dto.ts\n            \n            class\n            AcknowledgeMessageResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/dto/acknowledge-message.dto.ts\n            \n            class\n            AcknowledgeMessageDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/dto/consume-message-response.dto.ts\n            \n            class\n            ConsumeMessageResponseDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/dto/consume-message.dto.ts\n            \n            class\n            ConsumeMessageDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/dto/publish-message.dto.ts\n            \n            class\n            PublishMessageDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/dto/publish-messge-respnse.dto.ts\n            \n            class\n            PublishMessageResponseDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/dto/published-messeges-list-response.dto.ts\n            \n            class\n            PublishedMessagesListResponse\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/entity.ts\n            \n            class\n            Entity\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/guard/requeue-message.guard.ts\n            \n            guard\n            RequeueMessageGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/interface/acknowledge-message-response.interface.ts\n            \n            interface\n            AcknowledgeMessageResponseInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/interface/consume-message-response.interface.ts\n            \n            interface\n            ConsumeMessageResponseInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/interface/entity.interface.ts\n            \n            interface\n            EntityInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/interface/entity.interface.ts\n            \n            interface\n            EntityToJsonInterface\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/interface/publish-message-response.interface.ts\n            \n            interface\n            PublishMessageResponseInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interface/published-messages-list-response.interface.ts\n            \n            interface\n            PublishedMessagesResponseListInterface\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.1.5\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.1.6\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nDbService\n\nDbService\n\nAppModule -->\n\nDbService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EXPIRE_DURATION_IN_MILLI_SECONDS   (src/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EXPIRE_DURATION_IN_MILLI_SECONDS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10000\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
